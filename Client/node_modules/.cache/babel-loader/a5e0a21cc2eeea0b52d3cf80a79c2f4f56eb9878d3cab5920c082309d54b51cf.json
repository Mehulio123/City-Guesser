{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Documents\\\\Desktop\\\\City-Guesser\\\\Client\\\\src\\\\gamePage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './gamePage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const [guess, setGuess] = useState(''); //we make a variable for the users guess\n  const [riddle, setRiddle] = useState(''); //we make a variable to store the riddle\n  const [city, setCity] = useState('New York'); //can change this dynamically \n  const [status, setStatus] = useState('');\n  const getRiddle = async () => {\n    try {\n      const response = await fetch('');\n      const data = await response.json();\n      setRiddle(data.riddle);\n      setStatus('');\n      setGuess('');\n    } catch (err) {\n      console.error('Error fetching riddle', err);\n      setRiddle('Error loading riddle.');\n    }\n  };\n  const handleSubmit = () => {\n    if (guess.toLowerCase() === city.toLowerCase()) {\n      setStatus('✅ Correct!');\n    } else {\n      setStatus('❌ Try again!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Welcome to City Riddler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRiddle,\n      children: \"Generate Riddle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), riddle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riddle-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Riddle:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this), \" \", riddle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guess,\n        onChange: e => setGuess(e.target.value),\n        placeholder: \"Your guess here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(GamePage, \"ZN7X2IrOd4ALpi7CgxkPNRqSYsA=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GamePage","_s","guess","setGuess","riddle","setRiddle","city","setCity","status","setStatus","getRiddle","response","fetch","data","json","err","console","error","handleSubmit","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ankit/OneDrive/Documents/Desktop/City-Guesser/Client/src/gamePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './gamePage.scss';\r\n\r\nfunction GamePage() {\r\n    const [guess, setGuess] = useState('');//we make a variable for the users guess\r\n    const [riddle, setRiddle] = useState('');//we make a variable to store the riddle\r\n    const [city, setCity] = useState('New York');//can change this dynamically \r\n    const [status, setStatus] = useState('');\r\n\r\n    const getRiddle = async () => {\r\n        try {\r\n            const response = await fetch('');\r\n            const data = await response.json();\r\n            setRiddle(data.riddle);\r\n            setStatus('');\r\n            setGuess('');\r\n        } catch (err) {\r\n            console.error('Error fetching riddle', err);\r\n            setRiddle('Error loading riddle.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if(guess.toLowerCase() === city.toLowerCase()) {\r\n            setStatus('✅ Correct!');\r\n        } else {\r\n            setStatus('❌ Try again!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className = \"game\">\r\n            <h2> Welcome to City Riddler</h2>\r\n            <button onClick={getRiddle}>Generate Riddle</button>\r\n            {riddle && (\r\n                <div className=\"riddle-section\">\r\n                <p><strong>Riddle:</strong> {riddle}</p>\r\n                <input\r\n                    type=\"text\"\r\n                    value={guess}\r\n                    onChange={(e) => setGuess(e.target.value)}\r\n                    placeholder=\"Your guess here...\"\r\n                />\r\n                <button onClick={handleSubmit}>Submit Guess</button>\r\n                <p className=\"status\">{status}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GamePage;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC;EACvC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC;EACzC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC,CAAC;EAC7C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,EAAE,CAAC;MAChC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCT,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC;MACtBK,SAAS,CAAC,EAAE,CAAC;MACbN,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOY,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CV,SAAS,CAAC,uBAAuB,CAAC;IACtC;EACJ,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAGhB,KAAK,CAACiB,WAAW,CAAC,CAAC,KAAKb,IAAI,CAACa,WAAW,CAAC,CAAC,EAAE;MAC3CV,SAAS,CAAC,YAAY,CAAC;IAC3B,CAAC,MAAM;MACHA,SAAS,CAAC,cAAc,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIV,OAAA;IAAKqB,SAAS,EAAG,MAAM;IAAAC,QAAA,gBACnBtB,OAAA;MAAAsB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC1B,OAAA;MAAQ2B,OAAO,EAAEhB,SAAU;MAAAW,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnDrB,MAAM,iBACHL,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC/BtB,OAAA;QAAAsB,QAAA,gBAAGtB,OAAA;UAAAsB,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACrB,MAAM;MAAA;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC1B,OAAA;QACI4B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,KAAM;QACb2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,WAAW,EAAC;MAAoB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACF1B,OAAA;QAAQ2B,OAAO,EAAER,YAAa;QAAAG,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpD1B,OAAA;QAAGqB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAEb;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACxB,EAAA,CA9CQD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAgDjB,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}