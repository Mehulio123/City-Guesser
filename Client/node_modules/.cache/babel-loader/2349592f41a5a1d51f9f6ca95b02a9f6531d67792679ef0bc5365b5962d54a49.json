{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Documents\\\\Desktop\\\\City-Guesser\\\\Client\\\\src\\\\gamePage.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './gamePage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const [guess, setGuess] = useState(''); //we make a variable for the users guess\n  const [riddle, setRiddle] = useState(''); //we make a variable to store the riddle\n  const [city, setCity] = useState(''); //can change this dynamically \n  const [status, setStatus] = useState('');\n  const [language, setLanguage] = useState(''); //set the language\n  const [cityresponse, originalData] = useState('');\n  const getRiddle = async () => {\n    try {\n      const cityresponse = await fetch('/api/getRandomCity');\n      const citydata = await cityresponse.json();\n      originalData(citydata);\n      console.log(citydata.city_name);\n      setCity(citydata.city_name);\n      setLanguage(citydata.language);\n      const riddleResponse = await fetch('/api/generateRiddle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cityName: citydata.city_name\n        })\n      });\n      const riddledata = await riddleResponse.json();\n      setRiddle(riddledata.riddle);\n      setStatus('');\n      setGuess('');\n    } catch (err) {\n      console.error('Error fetching riddle', err);\n      setRiddle('Error loading riddle.');\n    }\n  };\n  const handleSubmit = () => {\n    if (guess.toLowerCase() === city.toLowerCase()) {\n      setStatus('✅ Correct!');\n    } else {\n      setStatus('❌ Try again!');\n    }\n  };\n  const distance = () => {\n    try {\n      const CityData = \"/api/distance\"; //retrieve data\n      const Distance = \"/api/distance\"; //calculate distance between the cityres\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Welcome to City Riddler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRiddle,\n      children: \"Generate Riddle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), riddle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riddle-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Riddle:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this), \" \", riddle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guess,\n        onChange: e => setGuess(e.target.value),\n        placeholder: \"Your guess here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(GamePage, \"sVCcX3f+b7qLBM8p2DSNkRB5uH8=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GamePage","_s","guess","setGuess","riddle","setRiddle","city","setCity","status","setStatus","language","setLanguage","cityresponse","originalData","getRiddle","fetch","citydata","json","console","log","city_name","riddleResponse","method","headers","body","JSON","stringify","cityName","riddledata","err","error","handleSubmit","toLowerCase","distance","CityData","Distance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ankit/OneDrive/Documents/Desktop/City-Guesser/Client/src/gamePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './gamePage.scss';\r\n\r\nfunction GamePage() {\r\n    const [guess, setGuess] = useState('');//we make a variable for the users guess\r\n    const [riddle, setRiddle] = useState('');//we make a variable to store the riddle\r\n    const [city, setCity] = useState('');//can change this dynamically \r\n    const [status, setStatus] = useState('');\r\n    const [language, setLanguage] = useState('');//set the language\r\n    const [cityresponse, originalData] = useState('');\r\n\r\n    const getRiddle = async () => {\r\n        try {\r\n            const cityresponse = await fetch('/api/getRandomCity');\r\n            const citydata = await cityresponse.json();\r\n            originalData(citydata);\r\n            console.log(citydata.city_name)\r\n            setCity(citydata.city_name);\r\n            setLanguage(citydata.language);\r\n            \r\n            const riddleResponse = await fetch('/api/generateRiddle', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ cityName: citydata.city_name })\r\n            });\r\n            const riddledata = await riddleResponse.json();\r\n            setRiddle(riddledata.riddle);\r\n            setStatus('');\r\n            setGuess('');\r\n        } catch (err) {\r\n            console.error('Error fetching riddle', err);\r\n            setRiddle('Error loading riddle.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if(guess.toLowerCase() === city.toLowerCase()) {\r\n            setStatus('✅ Correct!');\r\n        } else {\r\n            setStatus('❌ Try again!');\r\n        }\r\n    };\r\n\r\n    const distance = () => {\r\n        try {\r\n            const CityData = \"/api/distance\" //retrieve data\r\n            const Distance = \"/api/distance\"//calculate distance between the cityres\r\n\r\n        } catch (err) {\r\n\r\n        }\r\n    \r\n    };\r\n\r\n    return (\r\n        <div className = \"game\">\r\n            <h2> Welcome to City Riddler</h2>\r\n            <button onClick={getRiddle}>Generate Riddle</button>\r\n            {riddle && (\r\n                <div className=\"riddle-section\">\r\n                <p><strong>Riddle:</strong> {riddle}</p>\r\n                <input\r\n                    type=\"text\"\r\n                    value={guess}\r\n                    onChange={(e) => setGuess(e.target.value)}\r\n                    placeholder=\"Your guess here...\"\r\n                />\r\n                <button onClick={handleSubmit}>Submit Guess</button>\r\n                <p className=\"status\">{status}</p>\r\n                </div>\r\n            )}\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}