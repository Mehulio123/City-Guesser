{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\OneDrive\\\\Documents\\\\Desktop\\\\City-Guesser\\\\Client\\\\src\\\\gamePage.jsx\",\n  _s3 = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './gamePage.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [guess, setGuess] = useState(''); //we make a variable for the users guess\n  const [riddle, setRiddle] = useState(''); //we make a variable to store the riddle\n  const [city, setCity] = useState(''); //can change this dynamically \n  const [status, setStatus] = useState('');\n  const [language, setLanguage] = useState(''); //set the language\n  const [cityresponse, originalData] = useState('');\n\n  //put this in a different file\n  function FallawayButton() {\n    _s();\n    const [clicked, setClicked] = useState(false);\n    const handleClick = () => {\n      setClicked(true);\n    };\n  }\n  //\n  _s(FallawayButton, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n  const getRiddle = async () => {\n    try {\n      const cityresponse = await fetch('/api/getRandomCity');\n      const citydata = await cityresponse.json();\n      originalData(citydata);\n      console.log(citydata.city_name);\n      setCity(citydata.city_name);\n      setLanguage(citydata.language);\n      const riddleResponse = await fetch('/api/generateRiddle', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cityName: citydata.city_name\n        })\n      });\n      const riddledata = await riddleResponse.json();\n      setRiddle(riddledata.riddle);\n      setStatus('');\n      setGuess('');\n    } catch (err) {\n      console.error('Error fetching riddle', err);\n      setRiddle('Error loading riddle.');\n    }\n  };\n  const handleSubmit = () => {\n    if (guess.toLowerCase() === city.toLowerCase()) {\n      setStatus('✅ Correct!');\n    } else {\n      getDistance(); // Call the new function\n    }\n  };\n  const getDistance = async () => {\n    try {\n      const response = await fetch(`/api/${guess}`);\n      if (!response.ok) throw new Error('City not found.');\n      const guessedCity = await response.json();\n      const distanceResponse = await fetch('/api/distance', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          city1: guessedCity,\n          city2: cityresponse\n        })\n      });\n      const distanceData = await distanceResponse.json();\n      setStatus(`❌ Try again! You are ${distanceData.distance.toFixed(2)} km away.`);\n    } catch (err) {\n      console.error('Error calculating distance:', err);\n      setStatus('❌ Error getting distance. Try a valid city name.');\n    }\n  };\n\n  //put this in a differnt file eventually\n  function FallAwayButton() {\n    _s2();\n    const [clicked, setClicked] = useState(false);\n    const handleClick = () => {\n      setClicked(true);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fall-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `fall-button ${clicked ? 'fall' : ''}`,\n        onClick: handleClick,\n        disabled: clicked,\n        children: \"Click Me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `hidden-text ${clicked ? 'show' : ''}`,\n        children: \"\\uD83C\\uDF89 Surprise! Here's your hidden message.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this);\n  }\n  _s2(FallAwayButton, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Welcome to City Riddler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRiddle,\n      children: \"Generate Riddle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), riddle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"riddle-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Riddle:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }, this), \" \", riddle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guess,\n        onChange: e => setGuess(e.target.value),\n        placeholder: \"Your guess here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s3(GamePage, \"sVCcX3f+b7qLBM8p2DSNkRB5uH8=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GamePage","_s3","_s","$RefreshSig$","_s2","guess","setGuess","riddle","setRiddle","city","setCity","status","setStatus","language","setLanguage","cityresponse","originalData","FallawayButton","clicked","setClicked","handleClick","getRiddle","fetch","citydata","json","console","log","city_name","riddleResponse","method","headers","body","JSON","stringify","cityName","riddledata","err","error","handleSubmit","toLowerCase","getDistance","response","ok","Error","guessedCity","distanceResponse","city1","city2","distanceData","distance","toFixed","FallAwayButton","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ankit/OneDrive/Documents/Desktop/City-Guesser/Client/src/gamePage.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './gamePage.scss';\r\n\r\nfunction GamePage() {\r\n    const [guess, setGuess] = useState('');//we make a variable for the users guess\r\n    const [riddle, setRiddle] = useState('');//we make a variable to store the riddle\r\n    const [city, setCity] = useState('');//can change this dynamically \r\n    const [status, setStatus] = useState('');\r\n    const [language, setLanguage] = useState('');//set the language\r\n    const [cityresponse, originalData] = useState('');\r\n\r\n    //put this in a different file\r\n    function FallawayButton() {\r\n        const [clicked, setClicked] = useState(false);\r\n        const handleClick = () => {\r\n            setClicked(true);\r\n        }\r\n    }\r\n    //\r\n    const getRiddle = async () => {\r\n        try {\r\n            const cityresponse = await fetch('/api/getRandomCity');\r\n            const citydata = await cityresponse.json();\r\n            originalData(citydata);\r\n            console.log(citydata.city_name)\r\n            setCity(citydata.city_name);\r\n            setLanguage(citydata.language);\r\n            \r\n            const riddleResponse = await fetch('/api/generateRiddle', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ cityName: citydata.city_name })\r\n            });\r\n            const riddledata = await riddleResponse.json();\r\n            setRiddle(riddledata.riddle);\r\n            setStatus('');\r\n            setGuess('');\r\n        } catch (err) {\r\n            console.error('Error fetching riddle', err);\r\n            setRiddle('Error loading riddle.');\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (guess.toLowerCase() === city.toLowerCase()) {\r\n            setStatus('✅ Correct!');\r\n        } else {\r\n            getDistance(); // Call the new function\r\n        }\r\n    };\r\n    \r\n\r\n    const getDistance = async () => {\r\n        try {\r\n            const response = await fetch(`/api/${guess}`);\r\n            if (!response.ok) throw new Error('City not found.');\r\n    \r\n            const guessedCity = await response.json();\r\n    \r\n            const distanceResponse = await fetch('/api/distance', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    city1: guessedCity,\r\n                    city2: cityresponse\r\n                })\r\n            });\r\n    \r\n            const distanceData = await distanceResponse.json();\r\n            setStatus(`❌ Try again! You are ${distanceData.distance.toFixed(2)} km away.`);\r\n        } catch (err) {\r\n            console.error('Error calculating distance:', err);\r\n            setStatus('❌ Error getting distance. Try a valid city name.');\r\n        }\r\n    };\r\n\r\n    //put this in a differnt file eventually\r\n    function FallAwayButton() {\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setClicked(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"fall-container\">\r\n        <button\r\n            className={`fall-button ${clicked ? 'fall' : ''}`}\r\n            onClick={handleClick}\r\n            disabled={clicked}\r\n        >\r\n            Click Me!\r\n        </button>\r\n\r\n        <p className={`hidden-text ${clicked ? 'show' : ''}`}>\r\n            🎉 Surprise! Here's your hidden message.\r\n        </p>\r\n        </div>\r\n    );\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className = \"game\">\r\n            <h2> Welcome to City Riddler</h2>\r\n            <button onClick={getRiddle}>Generate Riddle</button>\r\n            {riddle && (\r\n                <div className=\"riddle-section\">\r\n                <p><strong>Riddle:</strong> {riddle}</p>\r\n                <input\r\n                    type=\"text\"\r\n                    value={guess}\r\n                    onChange={(e) => setGuess(e.target.value)}\r\n                    placeholder=\"Your guess here...\"\r\n                />\r\n                \r\n                <button onClick={handleSubmit}>Submit Guess</button>\r\n                <p className=\"status\">{status}</p>\r\n                </div>\r\n            )}\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GamePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}